// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: auth.proto
// </auto-generated>
#pragma warning disable 0414, 1591
using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;

namespace auth {
  public sealed partial class AuthRequest : pb::IMessage<AuthRequest>
  {
    private static readonly pb::MessageParser<AuthRequest> _parser = new pb::MessageParser<AuthRequest>(() => new AuthRequest());
    public static pb::MessageParser<AuthRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return AuthReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public AuthRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public AuthRequest(AuthRequest other) : this() {
      credentials_ = other.credentials_;
    }

    public AuthRequest Clone() {
      return new AuthRequest(this);
    }

    // Field number for the "credentials" field.
    public const int CredentialsFieldNumber = 1;
    private pb::ByteString credentials_ = pb::ByteString.Empty;
    public pb::ByteString Credentials {
      get { return credentials_; }
      set {
        credentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as AuthRequest);
    }

    public bool Equals(AuthRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Credentials.Equals(other.Credentials);
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Credentials.Length != 0) hash ^= Credentials.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Credentials.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Credentials);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Credentials.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Credentials);
      }
      return size;
    }

    public void MergeFrom(AuthRequest other) {
      if (other == null) {
        return;
      }
      if (other.Credentials.Length != 0) {
        Credentials = other.Credentials;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Credentials = input.ReadBytes();
            break;
          }
        }
      }
    }
  }
}
